# -*- coding: utf-8 -*-
"""turnover_dashboard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xPraXd27PPhMbrxxWpEqhittWKpchATp
"""

!pip install streamlit

!streamlit run dashboards/turnover_dashboard.py

print(model.feature_names_in_)

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import joblib
import seaborn as sns

# List of expected features for the model
expected_features = [
    'satisfaction_level', 'last_evaluation', 'number_project',
    'average_montly_hours', 'time_spend_company', 'Work_accident',
    'promotion_last_5years', 'department_RandD', 'department_accounting',
    'department_hr', 'department_management', 'department_marketing',
    'department_product_mng', 'department_sales', 'department_support',
    'department_technical', 'salary_low', 'salary_medium'
]

# Load model and dataset
model = joblib.load('best_random_forest.pkl')
df = pd.read_csv('processed_dataset.csv')

# Filter columns to match expected features
df_model_input = df[expected_features]

# Make predictions
preds = model.predict_proba(df_model_input)[:, 1]
df['Turnover_Risk'] = preds

# Risk classification function
def classify_risk(prob):
    if prob < 0.2:
        return "ðŸŸ¢ Safe"
    elif prob < 0.6:
        return "ðŸŸ¡ Low Risk"
    elif prob < 0.9:
        return "ðŸŸ  Medium Risk"
    else:
        return "ðŸ”´ High Risk"

# Apply risk classification
df['Risk_Zone'] = df['Turnover_Risk'].apply(classify_risk)

# Streamlit app layout
st.title("Employee Turnover Risk Dashboard")

# Risk zone distribution bar chart
st.subheader("Risk Zone Distribution")
zone_counts = df['Risk_Zone'].value_counts()
st.bar_chart(zone_counts)

# Sample prediction data
st.subheader("Sample Predictions")
st.dataframe(df[['satisfaction_level', 'last_evaluation', 'Turnover_Risk', 'Risk_Zone']].head(10))

# Optional: satisfaction vs. risk scatter plot
st.subheader("Satisfaction vs. Turnover Risk")
fig, ax = plt.subplots()
sns.scatterplot(data=df, x='satisfaction_level', y='Turnover_Risk', hue='Risk_Zone', ax=ax)
st.pyplot(fig)